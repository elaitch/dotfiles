{
   "app_list": {
      "app_launch_count": 0,
      "last_app_launch_ping": "13059705600000000",
      "last_launch_ping": "13059705600000000",
      "launch_count": 0
   },
   "browser": {
      "enabled_labs_experiments": [  ],
      "last_redirect_origin": ""
   },
   "data_reduction": {
      "daily_original_length": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1598891966", "394951623", "1640312134", "4598599157", "863141281", "0", "881623518", "3485574690", "3399834551", "4751506809", "4663731836", "6696315207", "1978370523", "779591707", "924897", "937959325", "1065086" ],
      "daily_original_length_via_data_reduction_proxy": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_original_length_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1598891966", "394951623", "1640312134", "4598599157", "863141281", "0", "881623518", "3485574690", "3399834551", "4751506809", "4663731836", "6696315207", "1978370523", "779591707", "924897", "937959325", "1065086" ],
      "daily_received_length_https_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_long_bypass_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_short_bypass_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_unknown_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_via_data_reduction_proxy": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "last_update_date": "13059734400000000"
   },
   "gl_renderer_string": "GeForce GTX 650 Ti/PCIe/SSE2",
   "gl_vendor_string": "NVIDIA Corporation",
   "gl_version_string": "4.4.0 NVIDIA 343.22",
   "hardware_acceleration_mode_previous": true,
   "http_original_content_length": "36672394310",
   "http_received_content_length": "36672394310",
   "local_state": {
      "multiple_profile_prefs_version": 7
   },
   "network_time": {
      "network_time_mapping": {
         "local": 1415298930743.689,
         "network": 1415298930074.126
      }
   },
   "ntp": {
      "promo_resource_cache_update": "1415298934.910233"
   },
   "policy": {
      "last_statistics_update": "13059711861194876"
   },
   "profile": {
      "info_cache": {
         "Default": {
            "active_time": 1415303612.048555,
            "avatar_icon": "chrome://theme/IDR_PROFILE_AVATAR_26",
            "background_apps": false,
            "is_ephemeral": false,
            "is_omitted_from_profile_list": false,
            "is_using_default_avatar": true,
            "is_using_default_name": true,
            "managed_user_id": "",
            "name": "First user",
            "user_name": ""
         }
      },
      "last_active_profiles": [ "Default" ],
      "last_used": "Default"
   },
   "protocol_handler": {
      "excluded_schemes": {
         "afp": true,
         "data": true,
         "disk": true,
         "disks": true,
         "file": true,
         "hcp": true,
         "javascript": true,
         "mailto": false,
         "ms-help": true,
         "news": false,
         "nntp": true,
         "shell": true,
         "snews": false,
         "vbscript": true,
         "view-source": true,
         "vnd": {
            "ms": {
               "radio": true
            }
         }
      }
   },
   "show-first-run-bubble-option": 2,
   "shutdown": {
      "num_processes": 0,
      "num_processes_slow": 0,
      "type": 0
   },
   "uninstall_metrics": {
      "installation_date2": "1414065924",
      "launch_count": "41"
   },
   "user_experience_metrics": {
      "low_entropy_source2": 7786,
      "session_id": 40,
      "stability": {
         "breakpad_registration_fail": 41,
         "crash_count": 1,
         "debugger_not_present": 41,
         "execution_phase": 500,
         "exited_cleanly": false,
         "last_timestamp_sec": "1415304929",
         "launch_count": 41,
         "launch_time_sec": "1415298929",
         "plugin_stats2": [ {
            "crashes": 0,
            "instances": 0,
            "launches": 44,
            "loading_errors": 0,
            "name": "Shockwave Flash"
         }, {
            "crashes": 0,
            "instances": 0,
            "launches": 45,
            "loading_errors": 0,
            "name": "Widevine Content Decryption Module"
         } ],
         "session_end_completed": true,
         "stats_buildtime": "1412872381",
         "stats_version": "38.0.2125.104-64"
      }
   },
   "variations_last_fetch_time": "13059772530745005",
   "variations_seed": "",
   "variations_seed_date": "13059772530000000",
   "variations_seed_signature": "MEYCIQDsmDPnHCMCv/7rkPJnkY2XJ+hdwPGO6JYW4z4PUrX08wIhAJ425s/BLaUFRqOC3RRtkKRil3pdao33xN1I64iMyWqq",
   "was": {
      "restarted": false
   }
}
